@model ProjectTask

@{
    ViewData["Title"] = "Edit Task";
}

<h2>@ViewData["Title"]</h2>

<h4>ProjectTask</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            @Html.HiddenFor(model => model.ProjectTaskId)

            <!--<div asp-validation-summary="ModelOnly" class="text-danger"></div>-->
            <!--<input type="hidden" asp-for="ProjectTaskId" />-->
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProjectId" class="control-label">Project</label>
                <select asp-for="ProjectId" class="form-control" asp-items="ViewBag.Projects"></select>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" asp-area="ProjectManagement" asp-route-projectId="@Model.ProjectId" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

<!--
<div>
    <a asp-action="Index">Back to List</a>
</div>
-->

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
